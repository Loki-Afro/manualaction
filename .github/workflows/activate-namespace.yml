---
name: "activate namespace"

on:
  push:
    branches-ignore:
      - dependabot/**
  pull_request:
    branches:
      - main
    types: [labeled]


jobs:
  gather-facts:
    runs-on: ubuntu-latest
    outputs:
      ns-activator-function: ${{ steps.gather-facts.outputs.function }}
      branch-name: ${{ steps.gather-facts.outputs.branch_name }}
    steps:
      - name: gather-facts
        id: gather-facts
        env:
          GH_TOKEN: ${{ github.token }}
          GH_EVENT: ${{ github.event_name }}
        run: | 
          if [ "${{ github.event_name }}" == 'pull_request' ]; then
            echo "inside a pr"
            branch_name=${{ github.event.pull_request.head.ref }}
          elif [[ $GITHUB_EVENT_NAME == 'push' ]]; then
            echo "inside a branch"
            branch_name=${GITHUB_REF#refs/heads/}
          fi
          echo "branch_name: $branch_name"
          
          # gh pr view will exit with 1 when there is no pr for a given branch
          pr_labels=$(gh pr view $branch_name --repo ${{ github.repository }} --json labels 2>/dev/null) && echo "$pr_labels" || echo "no pr found"
          echo "pr_labels: $pr_labels"
          has_activation_label=$(echo $pr_labels | jq '.labels[] | select(.name == "auto-extend-ns-activation-time") | length > 0')
          
          if [ "$has_activation_label" == "true" ]; then
              echo "has pr, has label, extend activation time"
              echo "function=extendAndWait" >> "$GITHUB_OUTPUT"
          else
              echo "may have an pr, but if, there is no label, will create initial ns entry if there isn't one already"
              echo "function=createIfNotExistsAndWait" >> "$GITHUB_OUTPUT"
          fi
          echo "branch_name=$branch_name" >> "$GITHUB_OUTPUT" 

  create-branch-identifier:
    needs: gather-facts
    uses: hpi-schul-cloud/dof_app_deploy/.github/workflows/branch-to-namespace.yml@main
    with:
      branch: ${{ needs.gather-facts.outputs.branch-name }}

  call-ns-activator:
    needs: [gather-facts, create-branch-identifier]
    strategy:
      fail-fast: false
      matrix:
        instance: ["dbc", "brb", "nbc", "thr"]
    runs-on: ubuntu-latest
    steps:
      - name: call ns activator
        env:
          NS_ACTIVATOR_FUNCTION: ${{ needs.gather-facts.outputs.ns-activator-function }}
          NAMESPACE_NAME: ${{ needs.create-branch-identifier.outputs.id_branch }}
        run: |
          curl -v -XPOST -H 'Content-Type: application/json' "https://activate.${{ matrix.instance }}.dbildungscloud.dev/namespace/$NS_ACTIVATOR_FUNCTION" -d "{\"name\" : \"$NAMESPACE_NAME\"}"

